{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "databaseAccounts_name": {
            "type": "String"
        },
        "defaultConsistencyLevel": {
            "type": "string",
            "defaultValue": "Session",
            "allowedValues": [
                "Strong",
                "BoundedStaleness",
                "Session",
                "ConsistentPrefix",
                "Eventual"
            ],
            "metadata": {
                "description": "The consistency policy for the Cosmos DB account. - ConsistencyPolicy object"
            }
        },
        "maxStalenessPrefix": {
            "type": "int",
            "minValue": 1,
            "maxValue": 2147483647,
            "defaultValue": 100,
            "metadata": {
                "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated."
            }
        },
        "maxIntervalInSeconds": {
            "type": "int",
            "minValue": 5,
            "maxValue": 86400,
            "defaultValue": 5,
            "metadata": {
                "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "enableMultipleWriteLocations": {
           "type": "bool",
           "metadata": {
                "description": "Enables the account to write in multiple locations"
            },
            "defaultValue": false
        },
        "ipRangeFilter": {
            "type": "string",
             "metadata": {
                "description": "Cosmos DB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces."
            }           
        },
        "kind": {
            "type": "string",
            "defaultValue": "GlobalDocumentDB",
            "allowedValues": [
                "GlobalDocumentDB",
                "MongoDB",
                "Parse"
            ],
            "metadata": {
                "description": "Indicates the type of database account. This can only be set at database account creation. - GlobalDocumentDB, MongoDB, Parse"
            }  
        }
    },
    "variables": {    },
    "resources": [
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind":  "[parameters('kind')]",
            "name": "[parameters('databaseAccounts_name')]",
            "apiVersion": "2015-04-08",
            "location": "[parameters('location')]",
            "tags": {
                "defaultExperience": "Core (SQL)"
            },
            "properties": {
                "ipRangeFilter": "[parameters('ipRangeFilter')]",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": "[parameters('enableMultipleWriteLocations')]",
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "[parameters('defaultConsistencyLevel')]",
                    "maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]",
                    "maxStalenessPrefix": "[parameters('maxStalenessPrefix')]"
                },
                "locations": [
                    {
                        "locationName": "[parameters('location')]",
                        "failoverPriority": 0
                    }
                ],
                "capabilities": []
            },
            "dependsOn": []
        }
    ],
    "outputs": {}
}